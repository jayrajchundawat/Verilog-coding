/* Generated by Yosys 0.54+37 (git sha1 99f7d79ab, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

(* top =  1  *)
(* src = "adder_ff.v:1.1-20.10" *)
module adder_ff(CK, rst_n, scan_en, scan_in, scan_out, a, b, sum);
  input CK;
  input rst_n;
  input scan_en;
  input scan_in;
  output scan_out;
  input [3:0] a;
  input [3:0] b;
  output [4:0] sum;

  wire [4:0] sum_reg;
  wire _00_, _01_, _02_, _03_, _04_, _05_, _06_, _07_, _08_, _09_, _10_, _11_, _12_, _13_, _14_;
  wire _18_, _19_, _20_, _21_, _22_;
  wire [4:0] _15_, _16_, _17_;

  assign _00_ = a[1] ^ b[1];
  assign _01_ = ~(a[0] & b[0]);
  assign _17_[1] = ~(_01_ ^ _00_);
  assign _02_ = ~(a[2] ^ b[2]);
  assign _03_ = ~(a[1] & b[1]);
  assign _04_ = _00_ & ~(_01_);
  assign _05_ = _04_ | ~(_03_);
  assign _17_[2] = ~(_05_ ^ _02_);
  assign _06_ = ~(a[3] ^ b[3]);
  assign _07_ = ~(a[2] & b[2]);
  assign _08_ = _05_ & ~(_02_);
  assign _09_ = _07_ & ~(_08_);
  assign _17_[3] = _09_ ^ _06_;
  assign _16_[0] = a[0] ^ b[0];
  assign _10_ = a[3] & b[3];
  assign _11_ = ~(_07_ | _06_);
  assign _12_ = _11_ | _10_;
  assign _13_ = _06_ | _02_;
  assign _14_ = _05_ & ~(_13_);
  assign _15_[3] = _14_ | _12_;

  assign _18_ = rst_n ? _16_[0] : 1'h0;
  assign _19_ = rst_n ? _17_[1] : 1'h0;
  assign _20_ = rst_n ? _17_[2] : 1'h0;
  assign _21_ = rst_n ? _17_[3] : 1'h0;
  assign _22_ = rst_n ? _15_[3] : 1'h0;

  assign _15_[4] = 1'h0;
  assign _16_[4] = 1'h0;
  assign { _17_[4], _17_[0] } = { _15_[3], _16_[0] };

  // Scan-enabled flip-flops
  wire ff0_q, ff1_q, ff2_q, ff3_q, ff4_q;
  wire ff0_si, ff1_si, ff2_si, ff3_si, ff4_si;
  wire ff0_so, ff1_so, ff2_so, ff3_so;

  assign ff0_si = scan_in;
  assign ff1_si = ff0_q;
  assign ff2_si = ff1_q;
  assign ff3_si = ff2_q;
  assign ff4_si = ff3_q;
  assign scan_out = ff4_q;

  DFF_X1 ff0 (.CK(CK), .D(scan_en ? ff0_si : _18_), .Q(ff0_q), .RN(1'h1));
  DFF_X1 ff1 (.CK(CK), .D(scan_en ? ff1_si : _19_), .Q(ff1_q), .RN(1'h1));
  DFF_X1 ff2 (.CK(CK), .D(scan_en ? ff2_si : _20_), .Q(ff2_q), .RN(1'h1));
  DFF_X1 ff3 (.CK(CK), .D(scan_en ? ff3_si : _21_), .Q(ff3_q), .RN(1'h1));
  DFF_X1 ff4 (.CK(CK), .D(scan_en ? ff4_si : _22_), .Q(ff4_q), .RN(1'h1));

  assign sum_reg = {ff4_q, ff3_q, ff2_q, ff1_q, ff0_q};
  assign sum = sum_reg;
endmodule
