/* Generated by Yosys 0.54+37 (git sha1 99f7d79ab, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module adder_ff(ck, rst_n, a, b, sum);
  wire [4:0] _00_;
  wire [4:0] _01_;
  wire [4:0] _02_;
  wire [4:0] _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  input [3:0] a;
  wire [3:0] a;
  input [3:0] b;
  wire [3:0] b;
  input ck;
  wire ck;
  input rst_n;
  wire rst_n;
  output [4:0] sum;
  wire [4:0] sum;
  reg [4:0] sum_reg;
  always @(posedge ck)
    if (!rst_n) sum_reg[0] <= 1'h0;
    else sum_reg[0] <= _01_[0];
  always @(posedge ck)
    if (!rst_n) sum_reg[1] <= 1'h0;
    else sum_reg[1] <= _02_[1];
  always @(posedge ck)
    if (!rst_n) sum_reg[2] <= 1'h0;
    else sum_reg[2] <= _02_[2];
  always @(posedge ck)
    if (!rst_n) sum_reg[3] <= 1'h0;
    else sum_reg[3] <= _02_[3];
  always @(posedge ck)
    if (!rst_n) sum_reg[4] <= 1'h0;
    else sum_reg[4] <= _00_[3];
  assign _02_[1] = _01_[1] ^ _00_[0];
  assign _02_[2] = _01_[2] ^ _00_[1];
  assign _02_[3] = _01_[3] ^ _00_[2];
  assign _01_[0] = a[0] ^ b[0];
  assign _01_[1] = a[1] ^ b[1];
  assign _01_[2] = a[2] ^ b[2];
  assign _01_[3] = a[3] ^ b[3];
  assign _00_[0] = a[0] & b[0];
  assign _03_[1] = a[1] & b[1];
  assign _03_[2] = a[2] & b[2];
  assign _03_[3] = a[3] & b[3];
  assign _04_ = _01_[1] & _00_[0];
  assign _05_ = _01_[3] & _03_[2];
  assign _06_ = _07_ & _00_[1];
  assign _07_ = _01_[3] & _01_[2];
  assign _08_ = _01_[2] & _00_[1];
  assign _00_[1] = _03_[1] | _04_;
  assign _09_ = _03_[3] | _05_;
  assign _00_[3] = _09_ | _06_;
  assign _00_[2] = _03_[2] | _08_;
  assign _00_[4] = 1'h0;
  assign _01_[4] = 1'h0;
  assign { _02_[4], _02_[0] } = { _00_[3], _01_[0] };
  assign { _03_[4], _03_[0] } = { 1'h0, _00_[0] };
  assign sum = sum_reg;
endmodule
